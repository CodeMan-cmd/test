package controller;

import java.sql.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import pojo.Books;
import service.BooksService;
import util.Page;

@Controller
public class IndexController {
	@Resource
	private BooksService booksService;

	// 分页查询
	@RequestMapping("/select")
	protected String handleRequestInternal(
			@RequestParam(value = "bookPublish", required = false) String bookPublish,
			@RequestParam(value = "bookAuthor", required = false) String bookAuthor,
			@RequestParam(value = "dangqianyema", required = false) String dangqianyema,
			HttpServletRequest req, HttpServletResponse res) throws Exception {
		Books u = new Books();
		Page p = new Page();
		if (!"".equals(dangqianyema) && null != dangqianyema) {
			// 当前页数不为空时添加当前页数
			p.setDangqianyema(Integer.parseInt(dangqianyema));// String类型 强 转换成
																// // int 类型
		}
		if (!"".equals(bookPublish) && null != bookPublish) {
			// userCode不为空添加userCode
			u.setBookPublish(bookPublish);
			req.setAttribute("userCode", bookPublish);
		}
		if (!"".equals(bookAuthor) && null != bookAuthor) {
			/*String booksNameNew = new String(bookAuthor.getBytes("iso-8859-1"),
					"utf-8");*/
			// userName不为空添加userName
			u.setBookAuthor(bookAuthor);
			req.setAttribute("bookAuthor", bookAuthor);
		}
		List<Books> list = booksService.getAllUser(u, p);
		// 保存查询道的User集合
		req.setAttribute("list", list);
		req.setAttribute("p", p);
		return "KaoTiIndex1";
	}

	@RequestMapping("/insertBooksAdd")
	public String insertBooks(HttpServletRequest req) {
		return "KaoTiIndex2";
	}

	@RequestMapping("/insertBooks")
	public String insert(
			@RequestParam(value = "bookName", required = false) String bookName,
			@RequestParam(value = "bookAuthor", required = false) String bookAuthor,
			@RequestParam(value = "bookPublish", required = false) String bookPublish,
			@RequestParam(value = "bookPage", required = false) int bookPage,
			@RequestParam(value = "bookPrice", required = false) Double bookPrice,
			HttpServletRequest req) {
		// 获取系统当前时间
		Date createDate = new Date(new java.util.Date().getTime());
		Books b = new Books();
		b.setBookName(bookName);
		b.setBookAuthor(bookAuthor);
		b.setBookPublish(bookPublish);
		b.setBookPage(bookPage);
		b.setBookPrice(bookPrice);
		b.setCreateDate(createDate);
		if (b!=null) {
			booksService.insertBooks(b);
		}
		return "KaoTiIndex1";
	}

	@RequestMapping("/selectBook")
	public String selectBooks(HttpServletRequest req) {
		List<Books> list = booksService.selectBooks();
		req.setAttribute("list", list);
		return "KaoTiIndex1";
	}
}
