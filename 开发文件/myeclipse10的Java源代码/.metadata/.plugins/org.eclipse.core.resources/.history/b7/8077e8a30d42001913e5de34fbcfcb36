package controller;import java.util.List;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import pojo.User;import service.UserService;import utils.Page;@Controller// 控制器public class UserController {	@Resource	private UserService userService;	/***	 * 	 * @param userCode	 *            用户编码参数 代码要求飞必须	 * @param userName	 *            用户名参数 代码要求飞必须	 * @param dangqianyeshu	 *            当前页数参数 代码要求飞必须	 * @param req	 *            转发对象参数	 * @return	 */	@RequestMapping("cc")	public String showUserPR(			@RequestParam(value = "userCode", required = false) String userCode,			@RequestParam(value = "userName", required = false) String userName,			@RequestParam(value = "dangqianyeshu", required = false) String dangqianyeshu,			HttpServletRequest req) {		Page p = new Page();		User u = new User();		if (!"".equals(dangqianyeshu) && null != dangqianyeshu) {			p.setDangqianyeshu(Integer.parseInt(dangqianyeshu));// 强制类型转换			req.setAttribute("userCode", userCode);		}		if (!"".equals(userCode) && null != userCode) {			u.setUserCode(userCode);			req.setAttribute("userName", userName);		}		List<User> selectByPR = userService.selectByPR(u, p);		req.setAttribute("list", selectByPR);		req.setAttribute("dangqianyeshu", dangqianyeshu);		return "index";	}	@RequestMapping("ad")    public  String  addUser(@RequestParam(value="userCode" , required=false)String userCode,    		@RequestParam(value="userName", required=false)String userName,    		@RequestParam(value="userPassword", required=false)String userPassword ,HttpServletRequest req){    	  User u =new User();    	  if(!"".equals(userCode) && null!=userCode){    		  u.setUserCode(userCode);    	   }    	  if(!"".equals(userName) && null!=userName){    		   u.setUserName(userName);    	  }     	  if(!"".equals(userPassword) && null!=userPassword){    		  u.setUserPassword(userPassword);    	  }     if("".equals(userCode) || null==userCode  || "".equals(userName) || null==userName     		  || "".equals(userPassword) || null!=userPassword){    	    req.setAttribute("info","数据信息不完整");    		   return "aa";    	  }	            int addUser = userService.addUser(u);          if(addUser>0){        	  req.setAttribute("info","添加成功");          }    	return "add";    }}