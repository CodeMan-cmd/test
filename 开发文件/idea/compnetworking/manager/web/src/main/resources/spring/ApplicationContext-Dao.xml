<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">


<!--扫描db·properties-->
    <context:property-placeholder location="classpath:properties/*.properties"/>
    <!-- 阿里 druid 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">


        <!--基本属性driverclassname是访问的类dirver, url·user·password·-->
        <property name="driverClassName" value="${jdbc_driver}"/>
        <property name="url" value="${jdbc_url}"/>
        <property name="username" value="${jdbc_password}"/>
        <property name="password" value="${jdbc_password}"/>

        <!--初始化连接数量-->
        <property name="initialSize" value="${initialSize}"/>
        <!--最小空闲连接数-->
        <property name="minIdle" value="${minIdle}"/>
        <!--最大并发连接数-->
        <property name="maxActive" value="${maxActive}"/>
        <!--配置获取连接等待超时的时间-->
        <property name="maxWait" value="${maxWait}"/>

        <!--配置间隔多久才进行一次检测，需要关闭的空闲连接，单位是毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!--配置一个连接在池中最小生存的时间，单位是毫秒-->
        <property name="validationQuery" value="300000"/>

        <!--   &lt;!&ndash;配置监控统计拦截的filters&ndash;&gt;
           <property name="filters" value="stat"/>-->
    </bean>
    <!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 -->
    <!--加载回话工厂去加载mysqlMapperConfig.xml-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>

        <!--classpath*接受多个同名文件-->
        <property name="configLocation" value="classpath*:mybatis/mysqlMapperConfig.xml"/>
        <!--如果mapper.xml和对应的接口一样就不用写mapperLocation-->
        <!--<property name="mapperLocations">
            <list>
                <value>classpath:mapper/*.xml</value>
            </list>
        </property>-->
    </bean>
    <!--早dao层接口的子类对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="mapper"/>
    </bean>

</beans>